services:
    db:
        container_name: ${COMPOSE_PROJECT_NAME}_db # don't allow to scale the container
        image: mysql:8.0
        # MBSD-262
        command: >
            --default-authentication-plugin=mysql_native_password
            --binlog_expire_logs_seconds=86400
            --secure-file-priv=""
            --local-infile=1
            --innodb_redo_log_capacity=1G
        cap_add:
            - SYS_NICE  # CAP_SYS_NICE, fix error mbind: Operation not permitted
        restart: unless-stopped
        environment:
            - MYSQL_DATABASE=mediawiki
            - MYSQL_ROOT_HOST=%
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD?Variable MYSQL_ROOT_PASSWORD not set}
        volumes:
            - ./__initdb:/docker-entrypoint-initdb.d
            - db_data:/var/lib/mysql

    web:
        image: ghcr.io/wikiteq/taqasta:1.39.13-20251009-6b3acda # BEFORE upgrading to 1.4x, make sure the PR https://github.com/WikiTeq/Taqasta/pull/264 was merged or MW version >= 1.43.1
        restart: unless-stopped
        extra_hosts:
            - "gateway.docker.internal:host-gateway"
        depends_on:
            - db
            - redis
            - elasticsearch
        command: bash /entrypoint.sh
        environment:
            - MW_SITE_SERVER=https://bugsigdb.org
            - MW_DB_NAME=mediawiki
            - MW_DB_PASS=${MYSQL_ROOT_PASSWORD?Variable MYSQL_ROOT_PASSWORD not set}
            - MW_NCBI_TAXONOMY_API_KEY=${MW_NCBI_TAXONOMY_API_KEY:-}
            - MW_RECAPTCHA_SITE_KEY=${MW_RECAPTCHA_SITE_KEY:-}
            - MW_RECAPTCHA_SECRET_KEY=${MW_RECAPTCHA_SECRET_KEY:-}
            - MW_ADMIN_USER=admin
            - MW_ADMIN_PASSWORD
            - MW_SITE_NAME=BugSigDB
            - MW_SITE_LANG=en
            - MW_ENABLE_UPLOADS=1
            - MW_MAIN_CACHE_TYPE=CACHE_REDIS
            - MW_LOAD_SKINS=Vector,chameleon
            - MW_DEFAULT_SKIN=chameleon
            - MW_LOAD_EXTENSIONS=GTag,CodeEditor,Nuke,ParserFunctions,ReplaceText,WikiEditor,Interwiki,CodeEditor,Scribunto,SyntaxHighlight_GeSHi,DataTransfer,Variables,PubmedParser,CodeMirror,Loops,MyVariables,Arrays,DisplayTitle,NCBITaxonomyLookup,SemanticExtraSpecialProperties,SemanticResultFormats
            - MW_SEARCH_TYPE=CirrusSearch
            - MW_PROXY_SERVERS=varnish:80
            - MW_CACHE_PURGE_PAUSE=3600
            - MW_CACHE_PURGE_PAGE=Main_Page
            - PHP_MEMORY_LIMIT=4056M
            - MW_JOB_RUNNER_MEMORY_LIMIT=1G
        volumes:
            - web_data:/mediawiki
            - images:/mediawiki/images
            - ./_logs/httpd:/var/log/apache2
            - ./_logs/mediawiki:/var/log/mediawiki
            - ./_settings/:/var/www/mediawiki/w/_settings
            - ./_resources/favicon.ico:/var/www/mediawiki/w/favicon.ico
            - ./_resources/logo.png:/var/www/mediawiki/w/logo.png
            - ./_resources/chameleon:/var/www/mediawiki/w/skins/chameleon/custom
            - ./_resources/footer_icons/cuny.png:/var/www/mediawiki/w/cuny.png
            - ./_resources/footer_icons/mw.png:/var/www/mediawiki/w/mw.png
            - ./_resources/footer_icons/smw.png:/var/www/mediawiki/w/smw.png
            - ./_resources/footer_icons/ww.png:/var/www/mediawiki/w/ww.png
            - ./_resources/footer_icons/bioc.png:/var/www/mediawiki/w/bioc.png
            - ./_resources/extensions/CategoryLockdown:/var/www/mediawiki/w/extensions/CategoryLockdown
            - ./_resources/extensions/SubpageWatchlist:/var/www/mediawiki/w/extensions/SubpageWatchlist
            - ./_resources/extensions/SemanticScribunto:/var/www/mediawiki/w/extensions/SemanticScribunto
            - ./_resources/extensions/SemanticDependencyUpdater:/var/www/mediawiki/w/extensions/SemanticDependencyUpdater
            - ./_resources/googlef2273af339547660.html:/var/www/mediawiki/googlef2273af339547660.html
            - ./entrypoint.sh:/entrypoint.sh
            - ./cache_purge.sh:/cache_purge.sh
            # csv reports with index enabled, MBSD-355
            - ./csv_reports:/mediawiki/images/csv_reports
        labels:
            # cron
            - cron.enabled=true
            # studies export, MBSD-355
            #- "cron.report-studies.schedule=0 */1 * * *"
            - "cron.report-studies.schedule=*/5 * * * *"
            - 'cron.report-studies.command=php extensions/SemanticReports/maintenance/GenerateReport.php -q "[[Category:Studies]] |?Study design |?PMID |?DOI |?URI |?Authors list |?Title |?Journal |?Year |?Abstract |?Keyword list=Keywords |?State |?Reviewer" -f "csv" -o "/var/www/mediawiki/w/images/csv_reports/studies.$(date +%Y-%m-%d_%H).csv"'
            # experiments export, MBSD-355
            - "cron.report-studies.schedule=5 */1 * * *"
            - 'cron.report-studies.command=php extensions/SemanticReports/maintenance/GenerateReport.php -q "[[Category:Experiments]] |?Original page name=Experiment page name |?Related study=Study |?Location of subjects |?Host species |?Body site |?UBERON ID |?Condition |?EFO ID |?Group 0 name |?Group 1 name |?Group 1 definition |?Group 0 sample size |?Group 1 sample size |?Antibiotics exclusion |?Sequencing type |?16S variable region |?Sequencing platform |?Data transformation |?Statistical test |?Significance threshold |?MHT correction |?LDA Score above |?Matched on |?Confounders controlled for |?Pielou |?Shannon |?Chao1 |?Simpson |?Inverse Simpson |?Richness |?State |?Reviewer" -f "csv" -o "/var/www/mediawiki/w/images/csv_reports/experiments.$(date +%Y-%m-%d_%H).csv"'
            # signatures export, MBSD-355
            - "cron.report-studies.schedule=10 */1 * * *"
            - 'cron.report-studies.command=php extensions/SemanticReports/maintenance/GenerateReport.php -q "[[Category:Signatures]] |?Original page name=Signature page name |?Related experiment=Experiment |?Related study=Study |?Source data=Source |?Curated date |?Curator |?Revision editor |?Description |?Abundance in Group 1 |?NCBI_export=MetaPhlAn taxon names |?NCBI_export_ids_sc=NCBI Taxonomy IDs |?State |?Reviewer" -f "csv" -o "/var/www/mediawiki/w/images/csv_reports/experiments.$(date +%Y-%m-%d_%H).csv"'

    redis:
        container_name: ${COMPOSE_PROJECT_NAME}_redis # don't allow to scale the container
        image: "redis:7.4.0-alpine3.20"
        restart: unless-stopped
        volumes:
            - redis_data:/data
            - ./_resources/redis.conf:/usr/local/etc/redis/redis.conf
        command: ["redis-server", "/usr/local/etc/redis/redis.conf"]

    elasticsearch:
        container_name: ${COMPOSE_PROJECT_NAME}_elasticsearch # don't allow to scale the container
        image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
        restart: unless-stopped
        environment:
            - discovery.type=single-node
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - cluster.routing.allocation.disk.threshold_enabled=true
            - cluster.routing.allocation.disk.watermark.flood_stage=1gb
            - cluster.routing.allocation.disk.watermark.high=2gb
            - cluster.routing.allocation.disk.watermark.low=3gb
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - elasticsearch_data:/usr/share/elasticsearch/data

    matomo:
        image: matomo:5.1.1
        restart: unless-stopped
        networks:
            - default
            - traefik-public
        depends_on:
            - db
        environment:
            - MATOMO_DATABASE_HOST=db
            - MATOMO_DATABASE_DBNAME=matomo
            - MATOMO_DATABASE_USERNAME=root
            - MATOMO_DATABASE_PASSWORD=${MYSQL_ROOT_PASSWORD?Variable MYSQL_ROOT_PASSWORD not set}
            - PHP_MEMORY_LIMIT=2G
        volumes:
            - matomo_data:/var/www/html
            - ./_resources/matomo-bootstrap.php:/var/www/html/bootstrap.php
        labels:
            # cron
            - cron.enabled=true
            - cron.maintenance-matomo.schedule=@daily
            - cron.maintenance-matomo.command=./console core:archive --force-all-websites --url="http://matomo"
            # Traefik
            # (rule and middlewares are set in the override files, keep them synchronized)
            # - traefik.http.routers.${COMPOSE_PROJECT_NAME}-matomo.rule=Host(`bugsigdb.org`) && PathPrefix(`/matomo/`)
            # - traefik.http.routers.${COMPOSE_PROJECT_NAME}-matomo.middlewares=${COMPOSE_PROJECT_NAME}-matomo-stripprefix,${COMPOSE_PROJECT_NAME}-matomo-headers
            - traefik.enable=true
            - traefik.docker.network=traefik-public
            - traefik.constraint-label=traefik-public
            - traefik.http.routers.${COMPOSE_PROJECT_NAME}-matomo.entrypoints=websecure
            - traefik.http.routers.${COMPOSE_PROJECT_NAME}-matomo.tls.certresolver=le
            - traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-matomo-stripprefix.stripprefix.prefixes=/matomo
            - traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-matomo-stripprefix.stripprefix.forceSlash=true
            - traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-matomo-headers.headers.customrequestheaders.X-Forwarded-Uri=/matomo

    varnish:
        container_name: ${COMPOSE_PROJECT_NAME}_varnish # don't allow to scale the container
        image: pastakhov/varnish:7.0
        restart: unless-stopped
        networks:
            - default
            - traefik-public
        depends_on:
            - web
        tmpfs:
            - /var/lib/varnish:exec
        environment:
            - VARNISH_SIZE=5G
            - VARNISH_STORAGE_KIND=file
            - VARNISH_LOG_DIR=/var/log/varnish
            - VARNISH_LOG_FORMAT=X-Real-IP
            - MATOMO_USER=admin
            - MATOMO_PASSWORD=${MATOMO_PASSWORD?Variable MATOMO_PASSWORD not set}
        volumes:
            - ./_resources/varnish:/etc/varnish:ro
            - varnish_data:/data
            - ./_logs/varnish:/var/log/varnish
            - matomo_data:/var/www/html
        labels:
            # cron
            - cron.enabled=true
            # Every hour at the 59th minute
            - cron.import_logs_matomo.schedule=59 * * * *
            - cron.import_logs_matomo.command=import_logs_matomo
            # Traefik
            # (rule and middlewares are set in the override files, keep them synchronized)
            # - traefik.http.routers.${COMPOSE_PROJECT_NAME}-varnish.rule=Host(`bugsigdb.org`)
            # - traefik.http.routers.${COMPOSE_PROJECT_NAME}-varnish.middlewares=crowdsec@file
            - traefik.enable=true
            - traefik.docker.network=traefik-public
            - traefik.constraint-label=traefik-public
            - traefik.http.routers.${COMPOSE_PROJECT_NAME}-varnish.entrypoints=websecure
            - traefik.http.routers.${COMPOSE_PROJECT_NAME}-varnish.tls.certresolver=le

    cron:
        container_name: ${COMPOSE_PROJECT_NAME}_cron # don't allow to scale the container
        image: ghcr.io/wikiteq/cron:20250709-2da693f
        restart: unless-stopped
        environment:
            - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ./_logs/cron:/var/log/cron

networks:
    traefik-public:
        external: true

volumes:
    db_data:
    web_data:
    images:
    redis_data:
    elasticsearch_data:
    varnish_data:
    matomo_data:
    restic_data:
